package kz.nitec.shep.service.async;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * Интерфейс сервиса на ШЭП, для работы с асинхронным каналом
 *
 * This class was generated by Apache CXF 3.3.0
 * 2021-06-08T11:25:55.836+06:00
 * Generated source version: 3.3.0
 *
 */
@WebService(targetNamespace = "http://bip.bee.kz/AsyncChannel/v10/Interfaces", name = "IAsyncChannel")
@XmlSeeAlso({ObjectFactory.class})
public interface IAsyncChannel {

    /**
     * Метод выборки сообщений с ШЭП по следующим параметрам:
     * -идентификатору сообщения+получателю(только для запрасившего)+идентификатору сервиса
     * -идентификатору цепочки сообщений+получателю(только для запрасившего)+идентификатору сервиса
     * -получателю(только для запрасившего)+идентификатору сервиса
     */
    @WebMethod
    @RequestWrapper(localName = "getMessages", targetNamespace = "http://bip.bee.kz/AsyncChannel/v10/Types", className = "kz.nitec.shep.service.async.GetMessages")
    @ResponseWrapper(localName = "getMessagesResponse", targetNamespace = "http://bip.bee.kz/AsyncChannel/v10/Types", className = "kz.nitec.shep.service.async.GetMessagesResponse")
    @WebResult(name = "response", targetNamespace = "")
    public kz.nitec.shep.service.async.AsyncGetMessagesResponse getMessages(
        @WebParam(name = "request", targetNamespace = "")
        kz.nitec.shep.service.async.AsyncGetMessagesRequest request
    ) throws GetMessagesGetMessagesFaultMsg;

    /**
     * Метод отправки уведомления на ШЭП о доставке или не доставке сообщения н
     */
    @WebMethod
    @RequestWrapper(localName = "sendDeliveryNotification", targetNamespace = "http://bip.bee.kz/AsyncChannel/v10/Types", className = "kz.nitec.shep.service.async.SendDeliveryNotification")
    @ResponseWrapper(localName = "sendDeliveryNotificationResponse", targetNamespace = "http://bip.bee.kz/AsyncChannel/v10/Types", className = "kz.nitec.shep.service.async.SendDeliveryNotificationResponse")
    @WebResult(name = "response", targetNamespace = "")
    public kz.nitec.shep.service.async.AsyncSendDeliveryNotificationResponse sendDeliveryNotification(
        @WebParam(name = "request", targetNamespace = "")
        kz.nitec.shep.service.async.AsyncSendDeliveryNotificationRequest request
    ) throws SendDeliveryNotificationSendDeliveryNotificationFaultMsg;

    /**
     * Метод получения статуса сообщения с ШЭП
     */
    @WebMethod
    @RequestWrapper(localName = "getMessageStatus", targetNamespace = "http://bip.bee.kz/AsyncChannel/v10/Types", className = "kz.nitec.shep.service.async.GetMessageStatus")
    @ResponseWrapper(localName = "getMessageStatusResponse", targetNamespace = "http://bip.bee.kz/AsyncChannel/v10/Types", className = "kz.nitec.shep.service.async.GetMessageStatusResponse")
    @WebResult(name = "response", targetNamespace = "")
    public kz.nitec.shep.service.async.AsyncGetMessageStatusResponse getMessageStatus(
        @WebParam(name = "request", targetNamespace = "")
        kz.nitec.shep.service.async.AsyncGetMessageStatusRequest request
    ) throws GetMessageStatusGetMessageStatusFaultMsg;

    /**
     * Метод для отправки сообщений на асинхронный канал ШЭП
     */
    @WebMethod
    @RequestWrapper(localName = "sendMessage", targetNamespace = "http://bip.bee.kz/AsyncChannel/v10/Types", className = "kz.nitec.shep.service.async.SendMessage")
    @ResponseWrapper(localName = "sendMessageResponse", targetNamespace = "http://bip.bee.kz/AsyncChannel/v10/Types", className = "kz.nitec.shep.service.async.SendMessageResponse")
    @WebResult(name = "response", targetNamespace = "")
    public kz.nitec.shep.service.async.AsyncSendMessageResponse sendMessage(
        @WebParam(name = "request", targetNamespace = "")
        kz.nitec.shep.service.async.AsyncSendMessageRequest request
    ) throws SendMessageSendMessageFaultMsg;
}
